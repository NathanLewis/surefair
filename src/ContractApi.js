import Web3 from 'web3';
var web3;

var syndicateContractAddress = "0x45790ce1c3dec66a1041bb892ddbcb5aa14ef0ba";
var macbookContractAddress = "0xb086164c97275000f6c739bb426dfc0323cf5f7d";
var cropContractAddress = "0x4f549a4287fb518782ee60d25e366371ad04cd27";

var macbookContract;
var cropContract;
var syndicateContract;

export function init() {

  let condition = true;
  while (condition) {
    if (typeof window.web3 !== 'undefined') {
      window.web3 = new Web3(window.web3.currentProvider);
      console.log(window.web3.eth.accounts);
      condition = false;
    } else {
      condition = false;
      // set the provider you want from Web3.providers
      //window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
    }
  }


  web3 = window.web3;

  var syndicateInterface = [{ "constant": true, "inputs": [], "name": "name", "outputs": [{ "name": "", "type": "string" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "_spender", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "approve", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "addr", "type": "address" }], "name": "isContract", "outputs": [{ "name": "", "type": "bool" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "totalSupply", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "totalDividendPoints", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "_from", "type": "address" }, { "name": "_to", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "transferFrom", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "account", "type": "address" }], "name": "updateAccount", "outputs": [], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "decimals", "outputs": [{ "name": "", "type": "uint8" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "unclaimedDividends", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "getOracles", "outputs": [{ "name": "", "type": "address[]" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [{ "name": "insuranceID", "type": "uint64" }], "name": "getInsuranceDataByID", "outputs": [{ "name": "", "type": "address" }, { "name": "", "type": "address" }, { "name": "", "type": "uint64" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "_client", "type": "address" }, { "name": "_contractId", "type": "uint64" }], "name": "clientClaim", "outputs": [], "payable": false, "type": "function" }, { "constant": true, "inputs": [{ "name": "_owner", "type": "address" }], "name": "balanceOf", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [{ "name": "account", "type": "address" }], "name": "dividendsOwing", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "unfulfilledPayments", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "symbol", "outputs": [{ "name": "", "type": "string" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "_contractId", "type": "uint64" }], "name": "redeemFromEscrow", "outputs": [], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "_to", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "transfer", "outputs": [{ "name": "success", "type": "bool" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [{ "name": "_client", "type": "address" }], "name": "getInsuranceIDsByClient", "outputs": [{ "name": "", "type": "uint64[]" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [{ "name": "account", "type": "address" }], "name": "paymentsOwed", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "getEscrowBalance", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "getStats", "outputs": [{ "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }, { "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "totalPaymentPoints", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": true, "inputs": [{ "name": "_owner", "type": "address" }, { "name": "_spender", "type": "address" }], "name": "allowance", "outputs": [{ "name": "", "type": "uint256" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "oracleAddress", "type": "address" }], "name": "addOracle", "outputs": [], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "getInsuranceContracts", "outputs": [{ "name": "", "type": "address[]" }, { "name": "", "type": "uint256[]" }, { "name": "", "type": "uint256[]" }, { "name": "", "type": "uint256[]" }, { "name": "", "type": "uint256[]" }], "payable": false, "type": "function" }, { "constant": false, "inputs": [{ "name": "_oracle", "type": "address" }, { "name": "_oracleQuoteId", "type": "uint64" }], "name": "insureClient", "outputs": [], "payable": false, "type": "function" }, { "inputs": [], "payable": false, "type": "constructor" }, { "payable": true, "type": "fallback" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "_from", "type": "address" }, { "indexed": true, "name": "_to", "type": "address" }, { "indexed": false, "name": "_value", "type": "uint256" }], "name": "Transfer", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "name": "_owner", "type": "address" }, { "indexed": true, "name": "_spender", "type": "address" }, { "indexed": false, "name": "_value", "type": "uint256" }], "name": "Approval", "type": "event" }]
    ;
  var syndicateByteCode = "6060604052710125dfa371a19e6f7cb54395ca000000000060005534156200002657600080fd5b5b620000316200008f565b604051809103906000f08015156200004857600080fd5b600660086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b620000a0565b6040516104558062002c6983390190565b612bb980620000b06000396000f3006060604052361561015d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde031461024b578063095ea7b3146102da578063162790551461033457806318160ddd146103855780632113342d146103ae57806323b872dd146103d75780632ce3d44014610450578063313ce567146104895780633cb802b9146104b857806340884c52146104e15780634f1a76781461054c578063583d175f1461062357806370a082311461066f5780638391e45c146106bc578063874e1dee1461070957806395d89b4114610732578063a828f441146107c1578063a9059cbb146107ee578063aaeb325514610848578063b8eddde1146108d7578063c56e610e14610924578063c59d48471461094d578063d6c0a1e714610984578063dd62ed3e146109ad578063df5dd1a514610a19578063e33e59d814610a52578063f1eeec2e14610be1575b6102495b60008034141561017057610246565b6103e8340290508060096000828254019250508190555061019033610c2d565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b50565b005b341561025657600080fd5b61025e610e00565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561029f5780820151818401525b602081019050610283565b50505050905090810190601f1680156102cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102e557600080fd5b61031a600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610e44565b604051808215151515815260200191505060405180910390f35b341561033f57600080fd5b61036b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610fd2565b604051808215151515815260200191505060405180910390f35b341561039057600080fd5b610398610fe6565b6040518082815260200191505060405180910390f35b34156103b957600080fd5b6103c1610fec565b6040518082815260200191505060405180910390f35b34156103e257600080fd5b610436600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ff2565b604051808215151515815260200191505060405180910390f35b341561045b57600080fd5b610487600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610c2d565b005b341561049457600080fd5b61049c611353565b604051808260ff1660ff16815260200191505060405180910390f35b34156104c357600080fd5b6104cb61135d565b6040518082815260200191505060405180910390f35b34156104ec57600080fd5b6104f4611363565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156105385780820151818401525b60208101905061051c565b505050509050019250505060405180910390f35b341561055757600080fd5b610577600480803567ffffffffffffffff169060200190919050506114a1565b604051808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018667ffffffffffffffff1667ffffffffffffffff16815260200185815260200184815260200183815260200182815260200197505050505050505060405180910390f35b341561062e57600080fd5b61066d600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff16906020019091905050611568565b005b341561067a57600080fd5b6106a6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611795565b6040518082815260200191505060405180910390f35b34156106c757600080fd5b6106f3600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506117e2565b6040518082815260200191505060405180910390f35b341561071457600080fd5b61071c611889565b6040518082815260200191505060405180910390f35b341561073d57600080fd5b61074561188f565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107865780820151818401525b60208101905061076a565b50505050905090810190601f1680156107b35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156107cc57600080fd5b6107ec600480803567ffffffffffffffff169060200190919050506118d3565b005b34156107f957600080fd5b61082e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506119d9565b604051808215151515815260200191505060405180910390f35b341561085357600080fd5b61087f600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c13565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108c35780820151818401525b6020810190506108a7565b505050509050019250505060405180910390f35b34156108e257600080fd5b61090e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611ce5565b6040518082815260200191505060405180910390f35b341561092f57600080fd5b610937611d8c565b6040518082815260200191505060405180910390f35b341561095857600080fd5b610960611e3d565b60405180848152602001838152602001828152602001935050505060405180910390f35b341561098f57600080fd5b610997611e57565b6040518082815260200191505060405180910390f35b34156109b857600080fd5b610a03600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e5d565b6040518082815260200191505060405180910390f35b3415610a2457600080fd5b610a50600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611ee5565b005b3415610a5d57600080fd5b610a65612019565b60405180806020018060200180602001806020018060200186810386528b818151815260200191508051906020019060200280838360005b83811015610ab95780820151818401525b602081019050610a9d565b5050505090500186810385528a818151815260200191508051906020019060200280838360005b83811015610afc5780820151818401525b602081019050610ae0565b50505050905001868103845289818151815260200191508051906020019060200280838360005b83811015610b3f5780820151818401525b602081019050610b23565b50505050905001868103835288818151815260200191508051906020019060200280838360005b83811015610b825780820151818401525b602081019050610b66565b50505050905001868103825287818151815260200191508051906020019060200280838360005b83811015610bc55780820151818401525b602081019050610ba9565b505050509050019a505050505050505050505060405180910390f35b3415610bec57600080fd5b610c2b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff169060200190919050506123fa565b005b600080610c39836117e2565b9150610c4483611ce5565b90506000821115610cb05781600b6000828254039250508190555081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055505b600081118015610d02575080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410155b15610d685780600d6000828254039250508190555080600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055505b600c54600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600a54600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b505050565b610e08612a6a565b6040805190810160405280600d81526020017f466169725375726520436f696e0000000000000000000000000000000000000081525090505b90565b6000808214158015610ed357506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b15610ee15760009050610fcc565b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3600190505b92915050565b600080823b90506000811191505b50919050565b60095481565b600a5481565b60008060008060008060646000369050101561100d57600080fd5b600087141561101f5760009550611347565b61102889610c2d565b61103188610c2d565b600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549450600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549350868511159250868411159150600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015487600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154011190508280156111965750815b80156111a0575080155b1561133d5786600760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254019250508190555086600760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254039250508190555086600860008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508773ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef896040518082815260200191505060405180910390a360019550611347565b60009550611347565b5b50505050509392505050565b6000601290505b90565b600b5481565b61136b612a7e565b611373612a7e565b6000600660009054906101000a900467ffffffffffffffff1667ffffffffffffffff166040518059106113a35750595b908082528060200260200182016040525b509150600090505b600660009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff16101561149857600560008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828267ffffffffffffffff1681518110151561144e57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b80806001019150506113bc565b8192505b505090565b600080600080600080600080600160008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260010160149054906101000a900467ffffffffffffffff16836002015484600301548560040154866005015497509750975097509750975097505b50919395979092949650565b600080600160008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002091508373ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561178e578160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061161c81610fd2565b80156116e257508073ffffffffffffffffffffffffffffffffffffffff16637439a3bd8360010160149054906101000a900467ffffffffffffffff166000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808267ffffffffffffffff1667ffffffffffffffff168152602001915050602060405180830381600087803b15156116c657600080fd5b6102c65a03f115156116d757600080fd5b505050604051805190505b1561178d576117148260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c2d565b8160030154600760008460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055505b5b5b50505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015490505b919050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600a5403905060005481600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001540281151561187f57fe5b0491505b50919050565b600d5481565b611897612a6a565b6040805190810160405280600381526020017f465352000000000000000000000000000000000000000000000000000000000081525090505b90565b6000600160008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905043816005015410156119d457600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663db006a7582600301546040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b151561199e57600080fd5b6102c65a03f115156119af57600080fd5b5050506119bf81600301546129e0565b80600301546009600082825401925050819055505b5b5050565b6000806000806044600036905010156119f157600080fd5b6000851415611a035760009350611c0a565b611a0c33610c2d565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549250848310159150600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015485600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015401109050818015611aed575080155b15611c005784600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254039250508190555084600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef876040518082815260200191505060405180910390a360019350611c0a565b60009350611c0a565b5b50505092915050565b611c1b612a92565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611cd857602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff1681526020019060080190602082600701049283019260010382029150808411611c935790505b505050505090505b919050565b600080600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154600c5403905060005481600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015402811515611d8257fe5b0491505b50919050565b6000600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312065fe06000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515611e1c57600080fd5b6102c65a03f11515611e2d57600080fd5b5050506040518051905090505b90565b6000806000600954600a54600b549250925092505b909192565b600c5481565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b92915050565b6000819050611ef381610fd2565b15612014576001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508160056000600660009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600081819054906101000a900467ffffffffffffffff168092919060010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505b5b5050565b612021612a7e565b612029612aa6565b612031612aa6565b612039612aa6565b612041612aa6565b612049612a7e565b612051612aa6565b612059612aa6565b612061612aa6565b612069612aa6565b6000600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff166040518059106120995750595b908082528060200260200182016040525b509550600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff166040518059106120db5750595b908082528060200260200182016040525b509450600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff1660405180591061211d5750595b908082528060200260200182016040525b509350600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff1660405180591061215f5750595b908082528060200260200182016040525b509250600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff166040518059106121a15750595b908082528060200260200182016040525b509150600090505b600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff1610156123dd57600160008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868267ffffffffffffffff1681518110151561224f57fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020154858267ffffffffffffffff168151811015156122ce57fe5b9060200190602002018181525050600160008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030154848267ffffffffffffffff1681518110151561231f57fe5b9060200190602002018181525050600160008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040154838267ffffffffffffffff1681518110151561237057fe5b9060200190602002018181525050600160008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060050154828267ffffffffffffffff168151811015156123c157fe5b90602001906020020181815250505b80806001019150506121ba565b85858585859a509a509a509a509a505b5050505050509091929394565b60008060008060008061240b612aba565b600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561246357600080fd5b33965088955061247286610fd2565b151561247d57600080fd5b8573ffffffffffffffffffffffffffffffffffffffff1663627e64d2888a6000604051608001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018267ffffffffffffffff1667ffffffffffffffff16815260200192505050608060405180830381600087803b151561253c57600080fd5b6102c65a03f1151561254d57600080fd5b50505060405180519060200180519060200180519060200180519050945094509450945061257a87610c2d565b60008511801561258a5750600084115b80156125d75750600760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015485105b80156125e4575060095484105b156129d45786816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505088816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505087816040019067ffffffffffffffff16908167ffffffffffffffff16815250508481606001818152505083816080018181525050438160a00181815250508243018160c00181815250508060016000600360009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550606082015181600201556080820151816003015560a0820151816004015560c08201518160050155905050600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480600101828161281a9190612b2e565b91600052602060002090600491828204019190066008025b600360009054906101000a900467ffffffffffffffff16909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550506003600081819054906101000a900467ffffffffffffffff168092919060010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550506128c68160800151612a25565b83600960008282540392505081905550600660089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25856040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050600060405180830381600087803b151561296657600080fd5b6102c65a03f1151561297757600080fd5b50505084600760008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055506129d3856129e0565b5b5b505050505050505050565b60095460005482028115156129f157fe5b04600a600082825401925050819055508060096000828254019250508190555080600b600082825401925050819055505b50565b6009546000548202811515612a3657fe5b04600c600082825401925050819055508060096000828254039250508190555080600d600082825401925050819055505b50565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b60e060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b815481835581811511612b63576003016004900481600301600490048360005260206000209182019101612b629190612b68565b5b505050565b612b8a91905b80821115612b86576000816000905550600101612b6e565b5090565b905600a165627a7a72305820be9ce09b9478a31db25e7e71f20790d1f0b74f218e7c16d7c4f4cb7eb21a519400296060604052341561000f57600080fd5b5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001819055505b5b6103ec806100696000396000f30060606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063117de2fd1461007b57806312065fe0146100bd5780638da5cb5b146100e6578063ad7a672f1461013b578063b6b55f2514610164578063db006a7514610187575b600080fd5b341561008657600080fd5b6100bb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506101aa565b005b34156100c857600080fd5b6100d0610298565b6040518082815260200191505060405180910390f35b34156100f157600080fd5b6100f96102a3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014657600080fd5b61014e6102c8565b6040518082815260200191505060405180910390f35b341561016f57600080fd5b61018560048080359060200190919050506102ce565b005b341561019257600080fd5b6101a86004808035906020019091905050610347565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561029257600082111580610212575060015482115b1561021c57600080fd5b816001600082825403925050819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561029057600080fd5b5b5b5b505050565b600060015490505b90565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561034357600081101561033157600080fd5b806001600082825401925050819055505b5b5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103bc5760008110156103aa57600080fd5b806001600082825403925050819055505b5b5b505600a165627a7a7230582057e9117705e6c3c943d283f3d1b1e7ec91ed196b7e9423fe694ce636e9995d300029";

  var syndicateContractBase = web3.eth.contract(syndicateInterface);

  syndicateContract = syndicateContractBase.at(syndicateContractAddress);

  var macbookInterface = [{"constant":false,"inputs":[{"name":"_macbookYear","type":"uint256"},{"name":"_serial_number","type":"bytes32"},{"name":"_ipfsHash","type":"bytes32"}],"name":"createQuote","outputs":[{"name":"","type":"uint64"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getOracleDetails","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_client","type":"address"},{"name":"_quoteId","type":"uint64"}],"name":"getQuote","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_quoteId","type":"uint64"}],"name":"verifyClaim","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_client","type":"address"}],"name":"getUserQuoteIds","outputs":[{"name":"","type":"uint64[]"}],"payable":false,"type":"function"},{"inputs":[],"payable":false,"type":"constructor"}];
  
  var macbookByteCode = "6060604052341561000f57600080fd5b5b33600260086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b610892806100626000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806334256ab21461006a57806341bc7b1f146100cf578063627e64d2146101cb5780637439a3bd14610248578063a83e1d101461028d575b600080fd5b341561007557600080fd5b6100a56004808035906020019091908035600019169060200190919080356000191690602001909190505061031c565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b34156100da57600080fd5b6100e2610550565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156101275780820151818401525b60208101905061010b565b50505050905090810190601f1680156101545780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561018e5780820151818401525b602081019050610172565b50505050905090810190601f1680156101bb5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34156101d657600080fd5b610215600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff16906020019091905050610622565b60405180858152602001848152602001838152602001826000191660001916815260200194505050505060405180910390f35b341561025357600080fd5b610273600480803567ffffffffffffffff16906020019091905050610679565b604051808215151515815260200191505060405180910390f35b341561029857600080fd5b6102c4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506106cf565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103085780820151818401525b6020810190506102ec565b505050509050019250505060405180910390f35b60006103266107a1565b60006107e186141561034a5760648260000181815250506107d08260200181815250505b6107e086141561037057605a826000018181525050610708826020018181525050610387565b600a82600001818152505060648260200181815250505b6103e88260600181815250506001826080019015159081151581525050838260a001906000191690816000191681525050600260009054906101000a900467ffffffffffffffff169050816000808367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160050190600019169055905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060010182816104ba91906107df565b91600052602060002090600491828204019190066008025b83909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550506002600081819054906101000a900467ffffffffffffffff168092919060010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550508092505b50509392505050565b610558610819565b610560610819565b6040805190810160405280601181526020017f4d6163626f6f6b20496e737572616e6365000000000000000000000000000000815250608060405190810160405280605781526020017f41204d6163626f6f6b206f7261636c652064657369676e6564206578636c757381526020017f6976656c7920746f20696e73757265206d6163626f6f6b73206372656174656481526020017f206265747765656e203230313620616e6420323031372e000000000000000000815250915091505b9091565b60008060008060008060008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000209050806000015481600101548260030154836005015494509450945094505b5092959194509250565b6000806000808467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090508060040160009054906101000a900460ff16156106c457600191506106c9565b600091505b50919050565b6106d761082d565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561079457602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff168152602001906008019060208260070104928301926001038202915080841161074f5790505b505050505090505b919050565b60c060405190810160405280600081526020016000815260200160001515815260200160008152602001600015158152602001600080191681525090565b8154818355818115116108145760030160049004816003016004900483600052602060002091820191016108139190610841565b5b505050565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b61086391905b8082111561085f576000816000905550600101610847565b5090565b905600a165627a7a72305820ac50a9b2872d11f0d6ecea0fbb88ec1bd1a432fe3b13eb8581331e8004fdf8190029";
  var macbookContractBase = web3.eth.contract(macbookInterface);
  macbookContract = macbookContractBase.at(macbookContractAddress);

  var cropInterface = [{"constant":true,"inputs":[],"name":"getOracleDetails","outputs":[{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_client","type":"address"},{"name":"_quoteId","type":"uint64"}],"name":"getQuote","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"bytes32"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_quoteId","type":"uint64"}],"name":"verifyClaim","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"gpsLat","type":"uint256"},{"name":"gpsLong","type":"uint256"},{"name":"_ipfsHash","type":"bytes32"}],"name":"createQuote","outputs":[{"name":"","type":"uint64"}],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"_client","type":"address"}],"name":"getUserQuoteIds","outputs":[{"name":"","type":"uint64[]"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"creator","type":"address"}],"name":"CropOracle","outputs":[],"payable":false,"type":"function"}];

  var cropByteCode = "6060604052341561000f57600080fd5b5b6108eb8061001f6000396000f30060606040523615610076576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341bc7b1f1461007b578063627e64d2146101775780637439a3bd146101f457806394759c3614610239578063a83e1d101461029a578063b3f1586614610329575b600080fd5b341561008657600080fd5b61008e610362565b604051808060200180602001838103835285818151815260200191508051906020019080838360005b838110156100d35780820151818401525b6020810190506100b7565b50505050905090810190601f1680156101005780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561013a5780820151818401525b60208101905061011e565b50505050905090810190601f1680156101675780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b341561018257600080fd5b6101c1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803567ffffffffffffffff1690602001909190505061040e565b60405180858152602001848152602001838152602001826000191660001916815260200194505050505060405180910390f35b34156101ff57600080fd5b61021f600480803567ffffffffffffffff16906020019091905050610465565b604051808215151515815260200191505060405180910390f35b341561024457600080fd5b6102706004808035906020019091908035906020019091908035600019169060200190919050506104bb565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b34156102a557600080fd5b6102d1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610721565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156103155780820151818401525b6020810190506102f9565b505050509050019250505060405180910390f35b341561033457600080fd5b610360600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107f3565b005b61036a6107fa565b6103726107fa565b6040805190810160405280600e81526020017f43726f7020496e737572616e6365000000000000000000000000000000000000815250606060405190810160405280602281526020017f416e206f7261636c6520746f2069737375652063726f7020696e737572616e6381526020017f652e000000000000000000000000000000000000000000000000000000000000815250915091505b9091565b60008060008060008060008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000209050806000015481600101548260030154836005015494509450945094505b5092959194509250565b6000806000808467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090508060040160009054906101000a900460ff16156104b057600191506104b5565b600091505b50919050565b60006104c561080e565b60006014600a878115156104d557fe5b041080156104ee5750600a80878115156104eb57fe5b04115b80156105065750601e600a8681151561050357fe5b04115b801561051e57506023600a8681151561051b57fe5b04105b15610540576103e88260000181815250506107d0826020018181525050610558565b6064826000018181525050610bb88260200181815250505b6103e88260600181815250506001826080019015159081151581525050838260a001906000191690816000191681525050600260009054906101000a900467ffffffffffffffff169050816000808367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548160ff0219169083151502179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160050190600019169055905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480600101828161068b919061084c565b91600052602060002090600491828204019190066008025b83909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550506002600081819054906101000a900467ffffffffffffffff168092919060010191906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550508092505b50509392505050565b610729610886565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156107e657602002820191906000526020600020906000905b82829054906101000a900467ffffffffffffffff1667ffffffffffffffff16815260200190600801906020826007010492830192600103820291508084116107a15790505b505050505090505b919050565b3390505b50565b602060405190810160405280600081525090565b60c060405190810160405280600081526020016000815260200160001515815260200160008152602001600015158152602001600080191681525090565b815481835581811511610881576003016004900481600301600490048360005260206000209182019101610880919061089a565b5b505050565b602060405190810160405280600081525090565b6108bc91905b808211156108b85760008160009055506001016108a0565b5090565b905600a165627a7a72305820d496e0d340b61c7a409d88e24eb50bf5d1584b508182b2f9d2335829aebc59780029";
  var cropContractBase = web3.eth.contract(cropInterface);
  cropContract = cropContractBase.at(cropContractAddress);
}

class ContractApi {

  static isAddress(address) {
    return web3.isAddress(address);
  }

  static getInvestorOverview() {
    return new Promise((resolve, reject) => {
      var result = {};
      var resolved = 0;
      var resolveCheck = () => {
        resolved++;
        console.log('resolved = ' + resolved);
        if (resolved == 3) {
          result.userEscrowBalance = (result.userBalance / result.totalSupply) * result.escrowBalance;
          console.log(JSON.stringify(result));
          resolve(result);
        }
      }
      console.log('A');
      console.log(window.web3.eth.accounts);
      syndicateContract.getEscrowBalance((e, res) => {
        if (e) {
          console.log('escrow error');
          reject(e);
        } else {
          console.log('escrow call back');
          result.escrowBalance = Number(res);
          resolveCheck();
        }
      });
      syndicateContract.totalSupply((e, res) => {
        if (e) {
          console.log('supply error');
          reject(e);
        } else {
          result.totalSupply = Number(res);
          console.log('supply call back');
          resolveCheck();
        }
      });
      let address = web3.eth.accounts[0];
      console.log('default address = ' + address);
      syndicateContract.balanceOf(address, (e, res) => {
        if (e) {
          console.log('balance of error');
          reject(e);
        } else {
          console.log('balance of call back');
          result.userBalance = Number(res);
          resolveCheck();
        }
      });
    });
  }

  static getAllInsuranceContracts() {
    return new Promise((resolve, reject) => {
      var result = {};
      syndicateContract.getInsuranceContracts((e, res) => {
        if (e) {
          reject(e);
        } else {
          result.accounts = res[0];
          result.premiums = res[1];
          result.payouts = res[2];
          result.startBlocks = res[3];
          result.endBlocks = res[4];
          resolve(result);
        }
      });
    });
  }

  static getClientContracts() {
    return new Promise((resolve, reject) => {
      syndicateContract.getInsuranceIDsByClient(web3.eth.accounts[0], (e, insuranceIds) => {
        if (e) {
          reject(e);
        } else {

          let count = 0;
          let result = {
            premiums: [],
            payouts: [],
            endBlocks: []
          };
          for (let i = 0; i < insuranceIds.length; i++) {
            syndicateContract.getInsuranceDataByID(insuranceIds[i], (e, data) => {
              if (e) {
                reject(e);
              } else {
                result.premiums.push(data[2]);
                result.payouts.push(data[3]);
                result.startBlock.push(data[5]);
                result.endBlocks.push(data[6]);
                count++;
                if (count == insuranceIds.length + 1) {
                  resolve(result);
                }
              }
            });
          }
        }
      });
    });
  }

  static createMacbookQuote(year, serialNumber) {
    return new Promise((resolve, reject) => {
      console.log("creating macbook quote");
      let functionData = macbookContract.createQuote.getData(year, serialNumber, "", {
        from: web3.eth.accounts[0]
      });
      web3.eth.estimateGas({
        from: web3.eth.accounts[0],
        to: macbookContractAddress,
        data: functionData
      }, (e, gasCost) => {
        if (e) {
          reject(e);
        } else {
          console.log('gas callback ' + gasCost);
          macbookContract.createQuote(year, serialNumber, "", {
            from: web3.eth.accounts[0],
            gas: gasCost
          }, (e, quoteId) => {
            if (e) {
              reject(e);
            } else {
              console.log('create quote result: ' + JSON.stringify(quoteId));
              let result = {};
              result.quoteId = quoteId;
              macbookContract.getQuote(web3.eth.accounts[0], quoteId, (e, res) => {
                if (e) {
                  reject(e);
                } else {
                  console.log('get quote result = ' + res);
                  result.premium = res[0];
                  result.payout = res[1];
                  result.duration = res[2];
                  resolve(result);
                }
              });
            }
          });
        }
      });
    });
  }

  static getMacbookQuotes() {
    return new Promise((resolve, reject) => {
      macbookContract.getUserQuoteIds((e, quoteIds) => {
        if (e) {
          reject(e);
        } else {
          let quoteData = [];
          let count = 0;
          for (let i = 0; i < quoteIds.length; i++) {
            macbookContract.getQuote(web3.eth.accounts[0], quoteIds[i], (e, res) => {
              if (e) {
                reject(e);
              } else {
                let result = {};
                result.quoteId = quoteIds[i];
                console.log('get quote result = ' + res);
                result.premium = res[0];
                result.payout = res[1];
                result.duration = res[2];
                quoteData.push(result);
                count++;
                if (count == quoteIds.length - 1) {
                  resolve(quoteData);
                }
              }
            });
          }
        }
      });
    });
  }

  static getCropQuotes() {
    return new Promise((resolve, reject) => {
      cropContract.getUserQuoteIds((e, quoteIds) => {
        if (e) {
          reject(e);
        } else {
          let quoteData = [];
          let count = 0;
          for (let i = 0; i < quoteIds.length; i++) {
            cropContract.getQuote(web3.eth.accounts[0], quoteIds[i], (e, res) => {
              if (e) {
                reject(e);
              } else {
                let result = {};
                result.quoteId = quoteIds[i];
                console.log('get quote result = ' + res);
                result.premium = res[0];
                result.payout = res[1];
                result.duration = res[2];
                quoteData.push(result);
                count++;
                if (count == quoteIds.length - 1) {
                  resolve(quoteData);
                }
              }
            });
          }
        }
      });
    });
  }

  static createCropQuote(latitude, longitude) {
    return new Promise((resolve, reject) => {
      let functionData = cropContract.createQuote.getData(latitude, longitude, "", {
        from: web3.eth.accounts[0]
      });
      let gasCost = parseInt(web3.eth.estimateGas({
        from: web3.eth.accounts[0],
        to: cropContractAddress,
        data: functionData
      }));
      cropContract.createQuote(latitude, longitude, "", {
        from: web3.eth.accounts[0],
        gas: gasCost
      }, (e, quoteId) => {
        if (e) {
          reject(e);
        } else {
          let result = {};
          result.quoteId = quoteId;
          cropContract.getQuote(quoteId, (e, res) => {
            if (e) {
              reject(e);
            } else {
              result.premium = res[0];
              result.payout = res[1];
              result.duration = res[2];
              resolve(result);
            }
          });
        }
      });
    });
  }

  static purchaseInsurance(useCropOracle, quoteId) {
    return new Promise((resolve, reject) => {
      let oracleAddress;
      if (useCropOracle) {
        oracleAddress = cropContractAddress;
      } else {
        oracleAddress = macbookContractAddress;
      }
      let functionData = syndicateContract.insureClient.getData(oracleAddress, quoteId, {
        from: web3.eth.accounts[0],
      });
      let gasCost = parseInt(web3.eth.estimateGas({
        from: web3.eth.accounts[0],
        to: syndicateContractAddress,
        data: functionData
      }));
      syndicateContract.insureClient(oracleAddress, quoteId, {
        from: web3.eth.accounts[0],
        gas: gasCost
      }, (e, res) => {
        if (e) {
          reject(e);
        } else {
          resolve("Insurance Successfully Purchased!");
        }
      })
    });
  }
}

export default ContractApi;